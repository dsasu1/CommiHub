{"ast":null,"code":"import { AbstractRestService } from '../../service/BaseService';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let RolesService = /*#__PURE__*/(() => {\n  class RolesService extends AbstractRestService {\n    constructor(http) {\n      super(http);\n      this.controller = \"Roles/\";\n      this.availableRoleListChange = new Subject();\n    }\n\n    saveAvailableRole(avialableRole) {\n      return this.postItem(this.controller + \"SaveAvailableRole\", avialableRole);\n    }\n\n    getAvailableRoles(userId) {\n      let httpParams = new HttpParams().append(\"userId\", userId);\n      return this.getItem(this.controller + \"GetAvailableRoles\", httpParams);\n    }\n\n    deleteAvailableRole(userId, roleId) {\n      let httpParams = new HttpParams().append(\"userId\", userId).append(\"roleId\", roleId);\n      return this.deleteItem(this.controller + \"DeleteAvailableRole\", httpParams);\n    }\n\n    getAvailableRole(id) {\n      let httpParams = new HttpParams().append(\"id\", id);\n      return this.getItem(this.controller + \"GetAvailableRole\", httpParams);\n    }\n\n    loadAvailableRoles(userId) {\n      this.getAvailableRoles(userId).subscribe(data => {\n        this.availableRoleList = data;\n        this.availableRoleListChange.next(data);\n      });\n    }\n\n  }\n\n  RolesService.ɵfac = function RolesService_Factory(t) {\n    return new (t || RolesService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  RolesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RolesService,\n    factory: RolesService.ɵfac\n  });\n  return RolesService;\n})();","map":null,"metadata":{},"sourceType":"module"}