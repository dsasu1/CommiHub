{"ast":null,"code":"import { AppsessionService } from '../../service/appsession.service';\nimport { AvailableRole } from '../model/role.model';\nimport { ErrorMessage, MessageDetail } from '../../model/utility.model';\nimport { PsMaxLengths } from '../../common/AppConstants';\nimport { RolesService } from '../service/role.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/appsession.service\";\nimport * as i2 from \"../service/role.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../sharedcomponents/appmessages/errormessage.component\";\nimport * as i5 from \"primeng/inputtext\";\nimport * as i6 from \"primeng/togglebutton\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"../../sharedcomponents/progressbar/progressbar.component\";\nimport * as i9 from \"@ngx-translate/core\";\n\nfunction RoleformComponent_app_progressbar_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-progressbar\", 22);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"isSpinner\", true);\n  }\n}\n\nexport let RoleformComponent = /*#__PURE__*/(() => {\n  class RoleformComponent {\n    constructor(appsession, roleRepo) {\n      this.appsession = appsession;\n      this.roleRepo = roleRepo;\n      this.isManage = false;\n      this.isOpenForm = false;\n      this.InfoMsg = new ErrorMessage();\n      this.siteConstant = new PsMaxLengths();\n      this.isSubmitted = false;\n    }\n\n    ngOnInit() {\n      this.isOpenForm = this.isManage;\n\n      if (this.role == null) {\n        this.role = new AvailableRole();\n      }\n    }\n\n    openForm(open) {\n      this.InfoMsg.clear();\n\n      if (!open) {\n        this.role = new AvailableRole();\n      }\n\n      this.isOpenForm = open;\n    }\n\n    saveAvailableRole(form) {\n      if (this.role.isDemoAccount) {\n        let message = new MessageDetail();\n        message.isInfo = true;\n        message.msg = this.appsession.getTranslated(\"DemoFunctionalityLimited\");\n        this.appsession.setGlobalHeaderMessage(message);\n        return;\n      }\n\n      this.InfoMsg.clear();\n\n      if (form.valid) {\n        this.isSubmitted = true;\n        this.role.creatorUserId = this.appsession.CurrentUser.userVM.id;\n        this.roleRepo.saveAvailableRole(this.role).subscribe(data => {\n          this.isSubmitted = false;\n          this.appsession.setGlobalHeaderMessage();\n\n          if (!this.isManage) {\n            this.roleRepo.loadAvailableRoles(this.appsession.CurrentUser.userVM.id);\n            this.openForm(false);\n          }\n        }, error => {\n          this.isSubmitted = false;\n          let messages = this.appsession.getHttpErrorMessages(error);\n          this.InfoMsg.addRange(messages);\n          return;\n        });\n      }\n    }\n\n  }\n\n  RoleformComponent.ɵfac = function RoleformComponent_Factory(t) {\n    return new (t || RoleformComponent)(i0.ɵɵdirectiveInject(i1.AppsessionService), i0.ɵɵdirectiveInject(i2.RolesService));\n  };\n\n  RoleformComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RoleformComponent,\n    selectors: [[\"app-roleform\"]],\n    inputs: {\n      isManage: \"isManage\",\n      role: \"role\"\n    },\n    decls: 59,\n    vars: 52,\n    consts: [[1, \"row\", 3, \"hidden\"], [1, \"col-lg-12\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"hidden\", \"click\"], [1, \"fa\", \"fa-plus\"], [\"ngNativeValidate\", \"\", 3, \"hidden\", \"ngSubmit\"], [\"rForm\", \"ngForm\"], [1, \"row\"], [1, \"col-lg-12\", \"col-md-12\", \"col-sm-12\", \"col-xs-12\"], [1, \"form-group\"], [3, \"appMsg\"], [\"for\", \"title\", 1, \"control-label\"], [\"type\", \"text\", \"pInputText\", \"\", \"id\", \"title\", \"name\", \"title\", \"required\", \"\", 1, \"form-control\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\"], [\"for\", \"roleDesc\", 1, \"control-label\"], [\"type\", \"text\", \"pInputText\", \"\", \"id\", \"roleDesc\", \"name\", \"roleDesc\", 1, \"form-control\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\"], [1, \"col-lg-6\", \"col-md-6\", \"col-sm-12\", \"col-xs-12\"], [\"for\", \"hasManagementRights\", 1, \"control-label\"], [\"name\", \"hasManagementRights\", \"inputId\", \"hasManagementRights\", 3, \"onLabel\", \"offLabel\", \"ngModel\", \"ngModelChange\"], [\"for\", \"isValid\", 1, \"control-label\"], [\"name\", \"isValid\", \"inputId\", \"isValid\", 3, \"onLabel\", \"offLabel\", \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"btn-lg\", \"full-width\", 3, \"hidden\", \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-blue\", \"btn-lg\", \"full-width\", 3, \"disabled\"], [3, \"isSpinner\", 4, \"ngIf\"], [3, \"isSpinner\"]],\n    template: function RoleformComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function RoleformComponent_Template_button_click_2_listener() {\n          return ctx.openForm(true);\n        });\n        i0.ɵɵelement(3, \"i\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵpipe(5, \"translate\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"form\", 4, 5);\n        i0.ɵɵlistener(\"ngSubmit\", function RoleformComponent_Template_form_ngSubmit_6_listener() {\n          i0.ɵɵrestoreView(_r2);\n\n          const _r0 = i0.ɵɵreference(7);\n\n          return ctx.saveAvailableRole(_r0);\n        });\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7)(10, \"div\", 8);\n        i0.ɵɵelement(11, \"app-errormessage\", 9);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"div\", 6)(13, \"div\", 7)(14, \"div\", 8)(15, \"label\", 10);\n        i0.ɵɵtext(16);\n        i0.ɵɵpipe(17, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function RoleformComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.role.title = $event;\n        });\n        i0.ɵɵpipe(19, \"translate\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(20, \"div\", 6)(21, \"div\", 7)(22, \"div\", 8)(23, \"label\", 12);\n        i0.ɵɵtext(24);\n        i0.ɵɵpipe(25, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"input\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function RoleformComponent_Template_input_ngModelChange_26_listener($event) {\n          return ctx.role.roleDesc = $event;\n        });\n        i0.ɵɵpipe(27, \"translate\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(28, \"div\", 6)(29, \"div\", 14)(30, \"div\", 8)(31, \"label\", 15);\n        i0.ɵɵtext(32);\n        i0.ɵɵpipe(33, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(34, \"br\");\n        i0.ɵɵelementStart(35, \"p-toggleButton\", 16);\n        i0.ɵɵlistener(\"ngModelChange\", function RoleformComponent_Template_p_toggleButton_ngModelChange_35_listener($event) {\n          return ctx.role.hasManagementRights = $event;\n        });\n        i0.ɵɵpipe(36, \"translate\");\n        i0.ɵɵpipe(37, \"translate\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(38, \"div\", 14)(39, \"div\", 8)(40, \"label\", 17);\n        i0.ɵɵtext(41);\n        i0.ɵɵpipe(42, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(43, \"br\");\n        i0.ɵɵelementStart(44, \"p-toggleButton\", 18);\n        i0.ɵɵlistener(\"ngModelChange\", function RoleformComponent_Template_p_toggleButton_ngModelChange_44_listener($event) {\n          return ctx.role.isValid = $event;\n        });\n        i0.ɵɵpipe(45, \"translate\");\n        i0.ɵɵpipe(46, \"translate\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(47, \"div\", 6)(48, \"div\", 7)(49, \"div\", 6)(50, \"div\", 14)(51, \"button\", 19);\n        i0.ɵɵlistener(\"click\", function RoleformComponent_Template_button_click_51_listener() {\n          return ctx.openForm(false);\n        });\n        i0.ɵɵtext(52);\n        i0.ɵɵpipe(53, \"translate\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(54, \"div\", 14)(55, \"button\", 20);\n        i0.ɵɵtext(56);\n        i0.ɵɵpipe(57, \"translate\");\n        i0.ɵɵtemplate(58, RoleformComponent_app_progressbar_58_Template, 1, 1, \"app-progressbar\", 21);\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(7);\n\n        i0.ɵɵproperty(\"hidden\", ctx.isManage);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", ctx.isOpenForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(5, 26, \"AddNew\"), \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", !ctx.isOpenForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"appMsg\", ctx.InfoMsg);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(17, 28, \"RoleName\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(19, 30, \"EnterRoleName\"));\n        i0.ɵɵproperty(\"ngModel\", ctx.role.title);\n        i0.ɵɵattribute(\"maxlength\", ctx.siteConstant.Max100Length);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(25, 32, \"Description\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(27, 34, \"EnterDescription\"));\n        i0.ɵɵproperty(\"ngModel\", ctx.role.roleDesc);\n        i0.ɵɵattribute(\"maxlength\", ctx.siteConstant.Max100Length);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(33, 36, \"GiveAccessToManagement\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"onLabel\", i0.ɵɵpipeBind1(36, 38, \"Yes\"));\n        i0.ɵɵpropertyInterpolate(\"offLabel\", i0.ɵɵpipeBind1(37, 40, \"No\"));\n        i0.ɵɵproperty(\"ngModel\", ctx.role.hasManagementRights);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(42, 42, \"IsValid\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"onLabel\", i0.ɵɵpipeBind1(45, 44, \"Yes\"));\n        i0.ɵɵpropertyInterpolate(\"offLabel\", i0.ɵɵpipeBind1(46, 46, \"No\"));\n        i0.ɵɵproperty(\"ngModel\", ctx.role.isValid);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"hidden\", ctx.isManage);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(53, 48, \"Cancel\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !_r0.form.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(57, 50, \"Save\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isSubmitted);\n      }\n    },\n    directives: [i3.NgControlStatusGroup, i3.NgForm, i4.ErrormessageComponent, i3.DefaultValueAccessor, i5.InputText, i3.RequiredValidator, i3.NgControlStatus, i3.NgModel, i3.MaxLengthValidator, i6.ToggleButton, i7.NgIf, i8.ProgressbarComponent],\n    pipes: [i9.TranslatePipe],\n    encapsulation: 2\n  });\n  return RoleformComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}