{"ast":null,"code":"import { ActivatedRoute } from \"@angular/router\";\nimport { User } from '../../../model/users.model';\nimport { UsersService } from '../../../service/model.service';\nimport { AppConstants, PsMaxLengths } from '../../../common/AppConstants';\nimport { AppsessionService } from '../../../service/appsession.service';\nimport { ErrorMessage } from '../../../model/utility.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../service/model.service\";\nimport * as i2 from \"../../../service/appsession.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../../sharedcomponents/progressbar/progressbar.component\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"../../../sharedcomponents/appmessages/errormessage.component\";\nimport * as i8 from \"primeng/password\";\nimport * as i9 from \"@ngx-translate/core\";\n\nfunction NewpasswordComponent_app_progressbar_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-progressbar\");\n  }\n}\n\nfunction NewpasswordComponent_div_1_app_progressbar_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-progressbar\", 20);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"isSpinner\", true);\n  }\n}\n\nfunction NewpasswordComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"div\", 4)(3, \"div\", 5)(4, \"div\", 6)(5, \"h5\", 7);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 8)(9, \"form\", 9, 10);\n    i0.ɵɵlistener(\"ngSubmit\", function NewpasswordComponent_div_1_Template_form_ngSubmit_9_listener() {\n      i0.ɵɵrestoreView(_r5);\n\n      const _r2 = i0.ɵɵreference(10);\n\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onSubmitPassword(_r2);\n    });\n    i0.ɵɵelementStart(11, \"div\", 3)(12, \"div\", 11)(13, \"div\", 12);\n    i0.ɵɵelement(14, \"app-errormessage\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 12)(16, \"label\", 14);\n    i0.ɵɵtext(17);\n    i0.ɵɵpipe(18, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function NewpasswordComponent_div_1_Template_input_ngModelChange_19_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.newPasswordUser.password = $event;\n    });\n    i0.ɵɵpipe(20, \"translate\");\n    i0.ɵɵpipe(21, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"div\", 12)(23, \"label\", 16);\n    i0.ɵɵtext(24);\n    i0.ɵɵpipe(25, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"input\", 17);\n    i0.ɵɵlistener(\"ngModelChange\", function NewpasswordComponent_div_1_Template_input_ngModelChange_26_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.newPasswordUser.confirmPassword = $event;\n    });\n    i0.ɵɵpipe(27, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(28, \"button\", 18);\n    i0.ɵɵtext(29);\n    i0.ɵɵpipe(30, \"translate\");\n    i0.ɵɵtemplate(31, NewpasswordComponent_div_1_app_progressbar_31_Template, 1, 1, \"app-progressbar\", 19);\n    i0.ɵɵelementEnd()()()()()()()()();\n  }\n\n  if (rf & 2) {\n    const _r2 = i0.ɵɵreference(10);\n\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 14, \"NewPassword\"));\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"appMsg\", ctx_r1.newPassAccountMsg);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(18, 16, \"Password\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(20, 18, \"EnterPassword\"));\n    i0.ɵɵpropertyInterpolate(\"promptLabel\", i0.ɵɵpipeBind1(21, 20, \"EnterPassword\"));\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.newPasswordUser.password);\n    i0.ɵɵattribute(\"maxlength\", ctx_r1.siteConstant.PasswordMaxLength);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(25, 22, \"ConfirmPassword\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(27, 24, \"EnterPassword\"));\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.newPasswordUser.confirmPassword);\n    i0.ɵɵattribute(\"maxlength\", ctx_r1.siteConstant.PasswordMaxLength);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !_r2.form.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(30, 26, \"Submit\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isSubmitted);\n  }\n}\n\nexport let NewpasswordComponent = /*#__PURE__*/(() => {\n  class NewpasswordComponent {\n    constructor(userSource, appsession, activeRoute) {\n      this.userSource = userSource;\n      this.appsession = appsession;\n      this.activeRoute = activeRoute;\n      this.isDoneLoading = false;\n      this.titleKey = \"NewPassword\";\n      this.newPassAccountMsg = new ErrorMessage();\n      this.newPasswordUser = new User();\n      this.siteConstant = new PsMaxLengths();\n      this.isSubmitted = false;\n    }\n\n    ngOnInit() {\n      let code = this.activeRoute.snapshot.params[\"id\"];\n\n      if (code == null) {\n        this.appsession.redirectToRoute();\n        return;\n      }\n\n      this.newPasswordUser.vericationCodeId = code;\n      this.userSource.verifyChangePassword(this.newPasswordUser).subscribe(data => {\n        this.newPasswordUser = data;\n        this.isDoneLoading = true;\n        return;\n      }, error => {\n        this.appsession.redirectToRoute();\n        return;\n      });\n      this.appsession.SetAppTitle(this.titleKey);\n    }\n\n    onSubmitPassword(form) {\n      this.newPassAccountMsg.clear();\n\n      if (form.valid) {\n        if (this.newPasswordUser.password !== this.newPasswordUser.confirmPassword) {\n          this.newPassAccountMsg.add(this.appsession.getTranslated(AppConstants.ConfirmPasswordMatchError));\n          return;\n        }\n\n        this.isSubmitted = true;\n        this.userSource.saveNewPassword(this.newPasswordUser).subscribe(data => {\n          this.isSubmitted = false;\n          this.appsession.setGlobalHeaderMessage();\n          form.reset();\n          this.appsession.redirectToRoute();\n          return;\n        }, error => {\n          this.isSubmitted = false;\n          let messages = this.appsession.getHttpErrorMessages(error);\n          this.newPassAccountMsg.addRange(messages);\n          return;\n        });\n      }\n    }\n\n  }\n\n  NewpasswordComponent.ɵfac = function NewpasswordComponent_Factory(t) {\n    return new (t || NewpasswordComponent)(i0.ɵɵdirectiveInject(i1.UsersService), i0.ɵɵdirectiveInject(i2.AppsessionService), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n\n  NewpasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewpasswordComponent,\n    selectors: [[\"app-newpassword\"]],\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [\"class\", \"container\", 4, \"ngIf\"], [1, \"container\"], [1, \"row\"], [1, \"col-xl-6\", \"offset-lg-3\", \"col-lg-6\", \"col-md-12\", \"col-sm-12\", \"col-xs-12\"], [1, \"ui-block\"], [1, \"ui-block-title\"], [1, \"title\"], [1, \"ui-block-content\"], [\"ngNativeValidate\", \"\", 1, \"content\", 3, \"ngSubmit\"], [\"newPasswordform\", \"ngForm\"], [1, \"col-xl-12\", \"col-lg-12\", \"col-md-12\"], [1, \"form-group\"], [3, \"appMsg\"], [\"for\", \"password\", 1, \"control-label\"], [\"id\", \"password\", \"pPassword\", \"\", \"name\", \"password\", \"type\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"placeholder\", \"promptLabel\", \"ngModel\", \"ngModelChange\"], [\"for\", \"confirmPassword\", 1, \"control-label\"], [\"id\", \"confirmPassword\", \"name\", \"confirmPassword\", \"type\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-blue\", \"btn-lg\", \"full-width\", 3, \"disabled\"], [3, \"isSpinner\", 4, \"ngIf\"], [3, \"isSpinner\"]],\n    template: function NewpasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, NewpasswordComponent_app_progressbar_0_Template, 1, 0, \"app-progressbar\", 0);\n        i0.ɵɵtemplate(1, NewpasswordComponent_div_1_Template, 32, 28, \"div\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.isDoneLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isDoneLoading);\n      }\n    },\n    directives: [i4.NgIf, i5.ProgressbarComponent, i6.NgControlStatusGroup, i6.NgForm, i7.ErrormessageComponent, i6.DefaultValueAccessor, i8.PasswordDirective, i6.RequiredValidator, i6.NgControlStatus, i6.NgModel, i6.MaxLengthValidator],\n    pipes: [i9.TranslatePipe],\n    encapsulation: 2\n  });\n  return NewpasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}