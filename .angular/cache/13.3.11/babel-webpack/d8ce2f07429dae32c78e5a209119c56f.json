{"ast":null,"code":"import { NotificationService } from '../service/notification.service';\nimport { AppsessionService } from '../../service/appsession.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/appsession.service\";\nimport * as i2 from \"../service/notification.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../sharedcomponents/paging/pager.component\";\nimport * as i5 from \"@ngx-translate/core\";\nimport * as i6 from \"../../common/pipes/PSDateFormat\";\n\nfunction NotificationlistComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"NoDataToDisplay\"));\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"un-read\": a0\n  };\n};\n\nfunction NotificationlistComponent_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 4);\n    i0.ɵɵlistener(\"click\", function NotificationlistComponent_li_2_Template_li_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.routeToNotification();\n    });\n    i0.ɵɵelementStart(1, \"div\", 5);\n    i0.ɵɵelement(2, \"i\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 7)(4, \"a\", 8);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelementStart(8, \"i\", 9);\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \". \");\n    i0.ɵɵelementStart(12, \"span\", 10)(13, \"time\", 11);\n    i0.ɵɵtext(14);\n    i0.ɵɵpipe(15, \"PSDateTransform\");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const currentItem_r3 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, i_r4 + 1 <= ctx_r1.unseenNotificationCount));\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(currentItem_r3.userName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(7, 5, currentItem_r3.notificationResourceKey), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(10, 7, currentItem_r3.notificationAdditionalInfo));\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(15, 9, currentItem_r3.addedDateUtc), \"\");\n  }\n}\n\nfunction NotificationlistComponent_app_pager_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-pager\", 12);\n    i0.ɵɵlistener(\"onPaged\", function NotificationlistComponent_app_pager_3_Template_app_pager_onPaged_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.currentData = $event;\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"dataList\", ctx_r2.availableData);\n  }\n}\n\nexport let NotificationlistComponent = /*#__PURE__*/(() => {\n  class NotificationlistComponent {\n    constructor(appsession, notifyService) {\n      this.appsession = appsession;\n      this.notifyService = notifyService;\n      this.currentData = new Array();\n      this.unseenNotificationCount = 0;\n      this.isMainPage = false;\n    }\n\n    trackingBy(index, data) {\n      return data.id;\n    }\n\n    ngOnInit() {\n      if (this.isMainPage) {\n        this.subscriptionFilterdNotify = this.notifyService.filteredNotifyListChange.subscribe(value => {\n          this.availableData = value;\n\n          if (this.availableData != null) {\n            this.currentData = this.appsession.paginate(this.availableData, this.appsession.defaultPageSize, this.appsession.defaultPageSize);\n          }\n        });\n      }\n\n      this.subscriptionUnSeenNotifyCount = this.appsession.currentUnviewdNotificationCountChange.subscribe(value => {\n        this.unseenNotificationCount = value;\n      });\n      this.subscriptionSelectedProperty = this.appsession.selectedPropertyChange.subscribe(value => {\n        let selectedProperty = Object.assign({}, value);\n\n        if (selectedProperty != null) {\n          this.notifyService.loadNotifications(this.appsession.CurrentUser.userVM.id, selectedProperty.id, this.isMainPage);\n        }\n      });\n      this.subscriptionNotifyList = this.notifyService.notifyListChange.subscribe(value => {\n        if (value != null) {\n          this.notifyMaster = value;\n          this.appsession.currentUnviewdNotificationCountChange.next(value.nonViewedCount);\n          this.availableData = value.notificationVMS;\n\n          if (this.availableData != null) {\n            this.currentData = this.appsession.paginate(this.availableData, this.appsession.defaultPageSize, this.appsession.defaultPageSize);\n          }\n        }\n      });\n\n      if (this.appsession.selectedProperty != null) {\n        if (this.isMainPage) {\n          this.notifyService.loadNotifications(this.appsession.CurrentUser.userVM.id, this.appsession.selectedProperty.id, this.isMainPage);\n        }\n      }\n    }\n\n    routeToNotification() {\n      this.appsession.redirectToRoute(\"/notification\");\n    }\n\n    ngOnDestroy() {\n      if (this.isMainPage) {\n        this.subscriptionFilterdNotify.unsubscribe();\n      }\n\n      this.subscriptionNotifyList.unsubscribe();\n      this.subscriptionSelectedProperty.unsubscribe();\n    }\n\n  }\n\n  NotificationlistComponent.ɵfac = function NotificationlistComponent_Factory(t) {\n    return new (t || NotificationlistComponent)(i0.ɵɵdirectiveInject(i1.AppsessionService), i0.ɵɵdirectiveInject(i2.NotificationService));\n  };\n\n  NotificationlistComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NotificationlistComponent,\n    selectors: [[\"app-notificationlist\"]],\n    inputs: {\n      isMainPage: \"isMainPage\"\n    },\n    decls: 4,\n    vars: 4,\n    consts: [[1, \"notification-list\"], [4, \"ngIf\"], [3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"dataList\", \"onPaged\", 4, \"ngIf\"], [3, \"ngClass\", \"click\"], [1, \"author-thumb\"], [1, \"fa\", \"fa-bell\"], [1, \"notification-event\"], [1, \"h6\", \"notification-friend\"], [1, \"notification-link\"], [1, \"notification-date\"], [1, \"entry-date\", \"updated\"], [3, \"dataList\", \"onPaged\"]],\n    template: function NotificationlistComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ul\", 0);\n        i0.ɵɵtemplate(1, NotificationlistComponent_li_1_Template, 3, 3, \"li\", 1);\n        i0.ɵɵtemplate(2, NotificationlistComponent_li_2_Template, 16, 13, \"li\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, NotificationlistComponent_app_pager_3_Template, 1, 1, \"app-pager\", 3);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.currentData.length < 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.currentData)(\"ngForTrackBy\", ctx.trackingBy);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.availableData);\n      }\n    },\n    directives: [i3.NgIf, i3.NgForOf, i3.NgClass, i4.PagerComponent],\n    pipes: [i5.TranslatePipe, i6.PSDateFormat],\n    encapsulation: 2\n  });\n  return NotificationlistComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}