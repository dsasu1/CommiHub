{"ast":null,"code":"import { AbstractRestService } from '../../service/BaseService';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let NewsService = /*#__PURE__*/(() => {\n  class NewsService extends AbstractRestService {\n    constructor(http) {\n      super(http);\n      this.controller = \"NewsPosts/\";\n      this.newsListChange = new Subject();\n    }\n\n    saveNewsPost(newsPost) {\n      return this.postItem(this.controller + \"SaveNewsPost\", newsPost);\n    }\n\n    deleteNewsPost(userId, postId) {\n      let httpParams = new HttpParams().append(\"userId\", userId).append(\"postId\", postId);\n      return this.deleteItem(this.controller + \"DeleteNewsPost\", httpParams);\n    }\n\n    getNewsPosts(userId, propertyId) {\n      let httpParams = new HttpParams().append(\"userId\", userId).append(\"propertyId\", propertyId);\n      return this.getItem(this.controller + \"GetNewsPosts\", httpParams);\n    }\n\n    loadNewsPosts(userId, propertyId) {\n      this.getNewsPosts(userId, propertyId).subscribe(data => {\n        this.newsListChange.next(data);\n      });\n    }\n\n  }\n\n  NewsService.ɵfac = function NewsService_Factory(t) {\n    return new (t || NewsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  NewsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NewsService,\n    factory: NewsService.ɵfac\n  });\n  return NewsService;\n})();","map":null,"metadata":{},"sourceType":"module"}