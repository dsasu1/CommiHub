{"ast":null,"code":"import { PsMaxLengths, ChangeType } from '../../common/AppConstants';\nimport { UsersService, GlobalService } from '../../service/model.service';\nimport { User } from '../../model/users.model';\nimport { AppsessionService } from '../../service/appsession.service';\nimport { ErrorMessage, MessageDetail } from '../../model/utility.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/model.service\";\nimport * as i2 from \"../../service/appsession.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../sharedcomponents/appmessages/errormessage.component\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"primeng/inputtext\";\nimport * as i7 from \"../../sharedcomponents/progressbar/progressbar.component\";\nimport * as i8 from \"@ngx-translate/core\";\n\nfunction SecurityComponent_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const secQues_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", secQues_r3.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(secQues_r3.question);\n  }\n}\n\nfunction SecurityComponent_app_progressbar_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-progressbar\", 21);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"isSpinner\", true);\n  }\n}\n\nexport let SecurityComponent = /*#__PURE__*/(() => {\n  class SecurityComponent {\n    constructor(userSource, appsession, globalSource) {\n      this.userSource = userSource;\n      this.appsession = appsession;\n      this.globalSource = globalSource;\n      this.secQuestions = new Array();\n      this.securityMsg = new ErrorMessage();\n      this.siteConstant = new PsMaxLengths();\n      this.isSubmitted = false;\n    }\n\n    ngOnInit() {\n      if (this.appsession.IsUserLoggedIn) {\n        this.currentUser = this.appsession.CurrentUser;\n        this.user = Object.assign({}, this.currentUser.userVM);\n        this.globalSource.getSecQuestions().subscribe(data => this.secQuestions = data);\n      }\n    }\n\n    onSubmitQuestion(form) {\n      if (this.currentUser.userVM.isDemoAccount) {\n        let message = new MessageDetail();\n        message.isInfo = true;\n        message.msg = this.appsession.getTranslated(\"DemoFunctionalityLimited\");\n        this.appsession.setGlobalHeaderMessage(message);\n        return;\n      }\n\n      this.securityMsg.clear();\n\n      if (form.valid) {\n        this.isSubmitted = true;\n        this.user.changeType = ChangeType[ChangeType.SecurityQuestion];\n        this.userSource.SaveUserInfo(this.user).subscribe(data => {\n          this.isSubmitted = false;\n          this.appsession.setGlobalHeaderMessage();\n          this.user.changeType = null;\n          this.user.password = null;\n          this.user.userSecurityAns = null;\n          this.currentUser.userVM = this.user;\n          this.appsession.updateCurrentUserSession(this.currentUser);\n          return;\n        }, error => {\n          this.isSubmitted = false;\n          let messages = this.appsession.getHttpErrorMessages(error);\n          this.securityMsg.addRange(messages);\n          return;\n        });\n      }\n    }\n\n    onCancel() {\n      this.user = this.appsession.getCurrentUser().userVM;\n    }\n\n  }\n\n  SecurityComponent.ɵfac = function SecurityComponent_Factory(t) {\n    return new (t || SecurityComponent)(i0.ɵɵdirectiveInject(i1.UsersService), i0.ɵɵdirectiveInject(i2.AppsessionService), i0.ɵɵdirectiveInject(i1.GlobalService));\n  };\n\n  SecurityComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SecurityComponent,\n    selectors: [[\"app-security\"]],\n    decls: 44,\n    vars: 32,\n    consts: [[1, \"ui-block\"], [1, \"ui-block-title\"], [1, \"title\"], [1, \"ui-block-content\"], [\"ngNativeValidate\", \"\", 3, \"ngSubmit\"], [\"changeSecurityQuesform\", \"ngForm\"], [1, \"row\"], [1, \"col-lg-12\", \"col-md-12\", \"col-sm-12\", \"col-xs-12\"], [1, \"form-group\"], [3, \"appMsg\"], [1, \"col-lg-6\", \"col-md-6\", \"col-sm-12\", \"col-xs-12\"], [1, \"control-label\"], [\"name\", \"securityQuestionId\", \"required\", \"\", 1, \"select-2\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"pInputText\", \"\", \"name\", \"securityAnswer\", \"type\", \"text\", \"required\", \"\", 1, \"form-control\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\"], [1, \"col-xl-12\", \"col-lg-12\", \"col-md-12\", \"col-sm-12\", \"col-xs-12\"], [\"type\", \"password\", \"pInputText\", \"\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"btn-lg\", \"full-width\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-blue\", \"btn-lg\", \"full-width\"], [3, \"isSpinner\", 4, \"ngIf\"], [3, \"ngValue\"], [3, \"isSpinner\"]],\n    template: function SecurityComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r4 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h6\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"form\", 4, 5);\n        i0.ɵɵlistener(\"ngSubmit\", function SecurityComponent_Template_form_ngSubmit_6_listener() {\n          i0.ɵɵrestoreView(_r4);\n\n          const _r0 = i0.ɵɵreference(7);\n\n          return ctx.onSubmitQuestion(_r0);\n        });\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7)(10, \"div\", 8);\n        i0.ɵɵelement(11, \"app-errormessage\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 10)(13, \"div\", 8)(14, \"label\", 11);\n        i0.ɵɵtext(15);\n        i0.ɵɵpipe(16, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"select\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function SecurityComponent_Template_select_ngModelChange_17_listener($event) {\n          return ctx.user.securityQuestionId = $event;\n        });\n        i0.ɵɵtemplate(18, SecurityComponent_option_18_Template, 2, 2, \"option\", 13);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"div\", 10)(20, \"div\", 8)(21, \"label\", 11);\n        i0.ɵɵtext(22);\n        i0.ɵɵpipe(23, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"input\", 14);\n        i0.ɵɵlistener(\"ngModelChange\", function SecurityComponent_Template_input_ngModelChange_24_listener($event) {\n          return ctx.user.userSecurityAns = $event;\n        });\n        i0.ɵɵpipe(25, \"translate\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"div\", 15)(27, \"div\", 8)(28, \"label\", 11);\n        i0.ɵɵtext(29);\n        i0.ɵɵpipe(30, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"input\", 16);\n        i0.ɵɵlistener(\"ngModelChange\", function SecurityComponent_Template_input_ngModelChange_31_listener($event) {\n          return ctx.user.password = $event;\n        });\n        i0.ɵɵpipe(32, \"translate\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(33, \"div\", 7)(34, \"div\", 6)(35, \"div\", 10)(36, \"button\", 17);\n        i0.ɵɵlistener(\"click\", function SecurityComponent_Template_button_click_36_listener() {\n          return ctx.onCancel();\n        });\n        i0.ɵɵtext(37);\n        i0.ɵɵpipe(38, \"translate\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(39, \"div\", 10)(40, \"button\", 18);\n        i0.ɵɵtext(41);\n        i0.ɵɵpipe(42, \"translate\");\n        i0.ɵɵtemplate(43, SecurityComponent_app_progressbar_43_Template, 1, 1, \"app-progressbar\", 19);\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 16, \"SecurityQuestion\"));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"appMsg\", ctx.securityMsg);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(16, 18, \"Question\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.securityQuestionId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.secQuestions);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(23, 20, \"Answer\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(25, 22, \"EnterAnswer\"));\n        i0.ɵɵproperty(\"ngModel\", ctx.user.userSecurityAns);\n        i0.ɵɵattribute(\"maxlength\", ctx.siteConstant.TextMaxLength);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(30, 24, \"CurrentPassword\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(32, 26, \"EnterPassword\"));\n        i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n        i0.ɵɵattribute(\"maxlength\", ctx.siteConstant.PasswordMaxLength);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(38, 28, \"Cancel\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(42, 30, \"Save\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isSubmitted);\n      }\n    },\n    directives: [i3.NgControlStatusGroup, i3.NgForm, i4.ErrormessageComponent, i3.SelectControlValueAccessor, i3.RequiredValidator, i3.NgControlStatus, i3.NgModel, i5.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i6.InputText, i3.MaxLengthValidator, i5.NgIf, i7.ProgressbarComponent],\n    pipes: [i8.TranslatePipe],\n    encapsulation: 2\n  });\n  return SecurityComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}