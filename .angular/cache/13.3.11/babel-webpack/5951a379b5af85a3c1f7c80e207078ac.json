{"ast":null,"code":"import { AppsessionService } from '../../service/appsession.service';\nimport { CommentCardMod } from '../model/commentcard.model';\nimport { PsMaxLengths, UserTypeEnum } from '../../common/AppConstants';\nimport { ErrorMessage } from '../../model/utility.model';\nimport { CommentCardService } from '../service/commentcard.service';\nimport { ResidentsService } from '../../property/tenant/service/residents.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/appsession.service\";\nimport * as i2 from \"../service/commentcard.service\";\nimport * as i3 from \"../../property/tenant/service/residents.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../../sharedcomponents/appmessages/errormessage.component\";\nimport * as i7 from \"primeng/togglebutton\";\nimport * as i8 from \"../../sharedcomponents/progressbar/progressbar.component\";\nimport * as i9 from \"@ngx-translate/core\";\n\nfunction CommentcardformComponent_div_0_app_progressbar_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-progressbar\", 21);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"isSpinner\", true);\n  }\n}\n\nfunction CommentcardformComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"ul\", 3)(3, \"li\", 4)(4, \"a\", 5);\n    i0.ɵɵlistener(\"click\", function CommentcardformComponent_div_0_Template_a_click_4_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.showformClicked(true);\n    });\n    i0.ɵɵelement(5, \"i\", 6);\n    i0.ɵɵelementStart(6, \"span\");\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"translate\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(9, \"div\", 7)(10, \"div\", 8)(11, \"form\", 9, 10);\n    i0.ɵɵlistener(\"ngSubmit\", function CommentcardformComponent_div_0_Template_form_ngSubmit_11_listener() {\n      i0.ɵɵrestoreView(_r4);\n\n      const _r1 = i0.ɵɵreference(12);\n\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.onCommentSubmit(_r1);\n    });\n    i0.ɵɵelementStart(13, \"div\", 11);\n    i0.ɵɵelement(14, \"app-errormessage\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 13)(16, \"label\", 14);\n    i0.ɵɵtext(17);\n    i0.ɵɵpipe(18, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"textarea\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function CommentcardformComponent_div_0_Template_textarea_ngModelChange_19_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.commentForm.comment = $event;\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(20, \"div\", 16)(21, \"p-toggleButton\", 17);\n    i0.ɵɵlistener(\"ngModelChange\", function CommentcardformComponent_div_0_Template_p_toggleButton_ngModelChange_21_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.commentForm.isAnonymous = $event;\n    });\n    i0.ɵɵpipe(22, \"translate\");\n    i0.ɵɵpipe(23, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"button\", 18);\n    i0.ɵɵtext(25);\n    i0.ɵɵpipe(26, \"translate\");\n    i0.ɵɵtemplate(27, CommentcardformComponent_div_0_app_progressbar_27_Template, 1, 1, \"app-progressbar\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function CommentcardformComponent_div_0_Template_button_click_28_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.showformClicked(false);\n    });\n    i0.ɵɵtext(29);\n    i0.ɵɵpipe(30, \"translate\");\n    i0.ɵɵelementEnd()()()()()()();\n  }\n\n  if (rf & 2) {\n    const _r1 = i0.ɵɵreference(12);\n\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 14, \"CommentCard\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", !ctx_r0.showForm);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"appMsg\", ctx_r0.commentInfoMsg);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(18, 16, \"ShareAComment\"), \" \", ctx_r0.selectedProperty.propName, \"...\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.commentForm.comment);\n    i0.ɵɵattribute(\"maxlength\", ctx_r0.siteConstant.Max500Length);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"onLabel\", i0.ɵɵpipeBind1(22, 18, \"Anonymous\"));\n    i0.ɵɵpropertyInterpolate(\"offLabel\", i0.ɵɵpipeBind1(23, 20, \"MakeAnonymous\"));\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.commentForm.isAnonymous);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", !_r1.form.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(26, 22, \"Save\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isSubmitted);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(30, 24, \"Cancel\"), \" \");\n  }\n}\n\nexport let CommentcardformComponent = /*#__PURE__*/(() => {\n  class CommentcardformComponent {\n    constructor(appsession, commentSource, residentService) {\n      this.appsession = appsession;\n      this.commentSource = commentSource;\n      this.residentService = residentService;\n      this.commentForm = new CommentCardMod();\n      this.siteConstant = new PsMaxLengths();\n      this.showForm = false;\n      this.canSeeCommentForm = false;\n      this.commentInfoMsg = new ErrorMessage();\n      this.isSubmitted = false;\n    }\n\n    ngOnInit() {\n      if (this.appsession.IsUserLoggedIn) {\n        this.currentUser = this.appsession.CurrentUser;\n\n        if (this.appsession.selectedProperty != null) {\n          this.selectedProperty = this.appsession.selectedProperty;\n        }\n\n        if (this.currentUser.userTypeEnum == UserTypeEnum[UserTypeEnum.Tenant]) {\n          if (this.selectedProperty != null) {\n            this.residentService.hasValidResidency(this.currentUser.userVM.id, this.selectedProperty.id).subscribe(data => this.canSeeCommentForm = data);\n          }\n        }\n      }\n    }\n\n    onCommentSubmit(form) {\n      this.commentInfoMsg.clear();\n\n      if (form.valid) {\n        this.isSubmitted = true;\n        this.commentForm.userId = this.currentUser.userVM.id;\n        this.commentForm.propertyInformationId = this.selectedProperty.id;\n        this.commentSource.saveCommentCard(this.commentForm).subscribe(data => {\n          this.isSubmitted = false;\n          this.appsession.setGlobalHeaderMessage();\n          form.reset();\n          this.commentSource.loadCommentCards(this.currentUser.userVM.id, this.selectedProperty.id);\n          this.showformClicked(false);\n          return;\n        }, error => {\n          this.isSubmitted = false;\n          let messages = this.appsession.getHttpErrorMessages(error);\n          this.commentInfoMsg.addRange(messages);\n          return;\n        });\n      }\n    }\n\n    showformClicked(value) {\n      this.commentInfoMsg.clear();\n\n      if (!value) {\n        this.commentForm = new CommentCardMod();\n      }\n\n      this.showForm = value;\n    }\n\n  }\n\n  CommentcardformComponent.ɵfac = function CommentcardformComponent_Factory(t) {\n    return new (t || CommentcardformComponent)(i0.ɵɵdirectiveInject(i1.AppsessionService), i0.ɵɵdirectiveInject(i2.CommentCardService), i0.ɵɵdirectiveInject(i3.ResidentsService));\n  };\n\n  CommentcardformComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CommentcardformComponent,\n    selectors: [[\"app-commentcardform\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"ui-block\", 4, \"ngIf\"], [1, \"ui-block\"], [1, \"news-feed-form\"], [\"role\", \"tablist\", 1, \"nav\", \"nav-tabs\"], [1, \"nav-item\"], [\"data-toggle\", \"tab\", \"href\", \"#home-1\", \"role\", \"tab\", \"aria-expanded\", \"true\", 1, \"nav-link\", \"active\", \"inline-items\", 3, \"click\"], [1, \"fa\", \"fa-2x\", \"fa-comments-o\"], [1, \"tab-content\", 3, \"hidden\"], [\"id\", \"home-1\", \"role\", \"tabpanel\", \"aria-expanded\", \"true\", 1, \"tab-pane\", \"active\"], [\"ngNativeValidate\", \"\", 1, \"content\", 3, \"ngSubmit\"], [\"commform\", \"ngForm\"], [1, \"form-group\"], [3, \"appMsg\"], [1, \"form-group\", \"label-floating\", \"is-empty\"], [\"for\", \"comment\", 1, \"control-label\"], [\"id\", \"comment\", \"name\", \"comment\", \"placeholder\", \"\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"add-options-message\"], [\"name\", \"isAnonymous\", 3, \"onLabel\", \"offLabel\", \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-blue\", \"btn-md-2\", 3, \"disabled\"], [3, \"isSpinner\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"btn-md-2\", 3, \"click\"], [3, \"isSpinner\"]],\n    template: function CommentcardformComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CommentcardformComponent_div_0_Template, 31, 26, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.canSeeCommentForm);\n      }\n    },\n    directives: [i4.NgIf, i5.NgControlStatusGroup, i5.NgForm, i6.ErrormessageComponent, i5.DefaultValueAccessor, i5.RequiredValidator, i5.NgControlStatus, i5.NgModel, i5.MaxLengthValidator, i7.ToggleButton, i8.ProgressbarComponent],\n    pipes: [i9.TranslatePipe],\n    encapsulation: 2\n  });\n  return CommentcardformComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}