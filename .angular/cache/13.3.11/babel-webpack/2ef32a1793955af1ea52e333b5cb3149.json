{"ast":null,"code":"import { AbstractRestService } from '../../service/BaseService';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ServiceRequestService = /*#__PURE__*/(() => {\n  class ServiceRequestService extends AbstractRestService {\n    constructor(http) {\n      super(http);\n      this.controller = \"ServiceRequests/\";\n      this.srListChange = new Subject();\n    }\n\n    saveServiceRequest(srRequest) {\n      return this.postItem(this.controller + \"SaveServiceRequest\", srRequest);\n    }\n\n    saveRequestStatus(statusMod) {\n      return this.postItem(this.controller + \"SaveRequestStatus\", statusMod);\n    }\n\n    getServiceRequests(userId, propertyId) {\n      let httpParams = new HttpParams().append(\"userId\", userId).append(\"propertyId\", propertyId);\n      return this.getItem(this.controller + \"GetServiceRequests\", httpParams);\n    }\n\n    loadServiceRequests(userId, propertyId) {\n      this.getServiceRequests(userId, propertyId).subscribe(data => {\n        this.srListChange.next(data);\n      });\n    }\n\n  }\n\n  ServiceRequestService.ɵfac = function ServiceRequestService_Factory(t) {\n    return new (t || ServiceRequestService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ServiceRequestService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ServiceRequestService,\n    factory: ServiceRequestService.ɵfac\n  });\n  return ServiceRequestService;\n})();","map":null,"metadata":{},"sourceType":"module"}