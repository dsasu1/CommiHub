{"ast":null,"code":"import { AbstractRestService } from '../../service/BaseService';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let StaffsService = /*#__PURE__*/(() => {\n  class StaffsService extends AbstractRestService {\n    constructor(http) {\n      super(http);\n      this.controller = \"Staffs/\";\n      this.staffListChange = new Subject();\n    }\n\n    saveStaff(staff) {\n      return this.postItem(this.controller + \"SaveStaff\", staff);\n    }\n\n    saveRoleStaff(staff) {\n      return this.postItem(this.controller + \"SaveRoleStaff\", staff);\n    }\n\n    getStaffs(userId) {\n      let httpParams = new HttpParams().append(\"userId\", userId);\n      return this.getItem(this.controller + \"GetStaffs\", httpParams);\n    }\n\n    deleteStaffRole(userId, staffRoleId) {\n      let httpParams = new HttpParams().append(\"userId\", userId).append(\"staffRoleId\", staffRoleId);\n      return this.deleteItem(this.controller + \"DeleteStaffRole\", httpParams);\n    }\n\n    deleteStaff(userId, staffId) {\n      let httpParams = new HttpParams().append(\"userId\", userId).append(\"staffId\", staffId);\n      return this.deleteItem(this.controller + \"DeleteStaff\", httpParams);\n    }\n\n    loadStaffs(userId) {\n      this.getStaffs(userId).subscribe(data => {\n        this.staffList = data;\n        this.staffListChange.next(data);\n      });\n    }\n\n  }\n\n  StaffsService.ɵfac = function StaffsService_Factory(t) {\n    return new (t || StaffsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  StaffsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StaffsService,\n    factory: StaffsService.ɵfac\n  });\n  return StaffsService;\n})();","map":null,"metadata":{},"sourceType":"module"}