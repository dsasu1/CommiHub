{"ast":null,"code":"import { AppsessionService } from '../../service/appsession.service';\nimport { NewsPostMod } from '../model/news.model';\nimport { ErrorMessage } from '../../model/utility.model';\nimport { UserTypeEnum, PsMaxLengths, ShareWithEnum } from '../../common/AppConstants';\nimport { NewsService } from '../service/news.service';\nimport { ResidentsService } from '../../property/tenant/service/residents.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/appsession.service\";\nimport * as i2 from \"../service/news.service\";\nimport * as i3 from \"../../property/tenant/service/residents.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../../sharedcomponents/appmessages/errormessage.component\";\nimport * as i7 from \"../../sharedcomponents/progressbar/progressbar.component\";\nimport * as i8 from \"@ngx-translate/core\";\n\nfunction NewsfeedformComponent_div_0_app_progressbar_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-progressbar\", 20);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"isSpinner\", true);\n  }\n}\n\nfunction NewsfeedformComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"ul\", 3)(3, \"li\", 4)(4, \"a\", 5);\n    i0.ɵɵelement(5, \"i\", 6);\n    i0.ɵɵelementStart(6, \"span\");\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"translate\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(9, \"div\", 7)(10, \"div\", 8)(11, \"form\", 9, 10);\n    i0.ɵɵlistener(\"ngSubmit\", function NewsfeedformComponent_div_0_Template_form_ngSubmit_11_listener() {\n      i0.ɵɵrestoreView(_r4);\n\n      const _r1 = i0.ɵɵreference(12);\n\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.onNewsSubmit(_r1);\n    });\n    i0.ɵɵelementStart(13, \"div\", 11);\n    i0.ɵɵelement(14, \"app-errormessage\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 13)(16, \"label\", 14);\n    i0.ɵɵtext(17);\n    i0.ɵɵpipe(18, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"textarea\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function NewsfeedformComponent_div_0_Template_textarea_ngModelChange_19_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.newsForm.details = $event;\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(20, \"div\", 16)(21, \"div\", 17)(22, \"button\", 18);\n    i0.ɵɵtext(23);\n    i0.ɵɵpipe(24, \"translate\");\n    i0.ɵɵtemplate(25, NewsfeedformComponent_div_0_app_progressbar_25_Template, 1, 1, \"app-progressbar\", 19);\n    i0.ɵɵelementEnd()()()()()()()();\n  }\n\n  if (rf & 2) {\n    const _r1 = i0.ɵɵreference(12);\n\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(8, 9, \"Sharewith\"), \" \", ctx_r0.selectedProperty == null ? null : ctx_r0.selectedProperty.propName, \"\");\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"appMsg\", ctx_r0.InfoMsg);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(18, 11, \"WhatsNew\"), \"...\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newsForm.details);\n    i0.ɵɵattribute(\"MaxLength\", ctx_r0.siteConstant.Max500Length);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", !_r1.form.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(24, 13, \"Share\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isSubmitted);\n  }\n}\n\nexport let NewsfeedformComponent = /*#__PURE__*/(() => {\n  class NewsfeedformComponent {\n    constructor(appsession, newsSource, residentService) {\n      this.appsession = appsession;\n      this.newsSource = newsSource;\n      this.residentService = residentService;\n      this.newsForm = new NewsPostMod();\n      this.siteConstant = new PsMaxLengths();\n      this.InfoMsg = new ErrorMessage();\n      this.isSubmitted = false;\n      this.canSeeNewsForm = false;\n    }\n\n    ngOnInit() {\n      if (this.appsession.IsUserLoggedIn) {\n        this.currentUser = this.appsession.CurrentUser;\n\n        if (this.appsession.selectedProperty != null) {\n          this.selectedProperty = this.appsession.selectedProperty;\n        }\n\n        if (this.currentUser.userTypeEnum == UserTypeEnum[UserTypeEnum.Tenant]) {\n          if (this.selectedProperty != null) {\n            this.residentService.hasValidResidency(this.currentUser.userVM.id, this.selectedProperty.id).subscribe(data => this.canSeeNewsForm = data);\n          }\n        } else {\n          this.canSeeNewsForm = this.selectedProperty != null;\n        }\n      }\n    }\n\n    onNewsSubmit(form) {\n      this.InfoMsg.clear();\n\n      if (form.valid) {\n        this.isSubmitted = true;\n        this.newsForm.userId = this.currentUser.userVM.id;\n        this.newsForm.propertyInformationId = this.selectedProperty.id;\n        this.newsForm.shareWithEnum = ShareWithEnum[ShareWithEnum.Property];\n        this.newsSource.saveNewsPost(this.newsForm).subscribe(data => {\n          this.isSubmitted = false;\n          this.appsession.setGlobalHeaderMessage();\n          form.reset();\n          this.newsSource.loadNewsPosts(this.currentUser.userVM.id, this.selectedProperty.id);\n          return;\n        }, error => {\n          this.isSubmitted = false;\n          let messages = this.appsession.getHttpErrorMessages(error);\n          this.InfoMsg.addRange(messages);\n          return;\n        });\n      }\n    }\n\n  }\n\n  NewsfeedformComponent.ɵfac = function NewsfeedformComponent_Factory(t) {\n    return new (t || NewsfeedformComponent)(i0.ɵɵdirectiveInject(i1.AppsessionService), i0.ɵɵdirectiveInject(i2.NewsService), i0.ɵɵdirectiveInject(i3.ResidentsService));\n  };\n\n  NewsfeedformComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewsfeedformComponent,\n    selectors: [[\"app-newsfeedform\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"ui-block\", 4, \"ngIf\"], [1, \"ui-block\"], [1, \"news-feed-form\"], [\"role\", \"tablist\", 1, \"nav\", \"nav-tabs\"], [1, \"nav-item\"], [\"data-toggle\", \"tab\", \"href\", \"#home-1\", \"role\", \"tab\", \"aria-expanded\", \"true\", 1, \"nav-link\", \"active\", \"inline-items\"], [1, \"fa\", \"fa-2x\", \"fa-newspaper-o\"], [1, \"tab-content\"], [\"id\", \"home-1\", \"role\", \"tabpanel\", \"aria-expanded\", \"true\", 1, \"tab-pane\", \"active\"], [\"ngNativeValidate\", \"\", 1, \"content\", 3, \"ngSubmit\"], [\"newform\", \"ngForm\"], [1, \"form-group\"], [3, \"appMsg\"], [1, \"form-group\", \"label-floating\", \"is-empty\"], [\"for\", \"details\", 1, \"control-label\"], [\"id\", \"details\", \"name\", \"details\", \"required\", \"\", \"placeholder\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"add-options-message\"], [1, \"checkbox\"], [\"type\", \"submit\", 1, \"btn\", \"btn-blue\", \"btn-md-2\", 3, \"disabled\"], [3, \"isSpinner\", 4, \"ngIf\"], [3, \"isSpinner\"]],\n    template: function NewsfeedformComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, NewsfeedformComponent_div_0_Template, 26, 15, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.canSeeNewsForm);\n      }\n    },\n    directives: [i4.NgIf, i5.NgControlStatusGroup, i5.NgForm, i6.ErrormessageComponent, i5.DefaultValueAccessor, i5.RequiredValidator, i5.NgControlStatus, i5.NgModel, i7.ProgressbarComponent],\n    pipes: [i8.TranslatePipe],\n    encapsulation: 2\n  });\n  return NewsfeedformComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}