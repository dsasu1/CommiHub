{"ast":null,"code":"import { UsersService } from '../../service/model.service';\nimport { User } from '../../model/users.model';\nimport { AppsessionService } from '../../service/appsession.service';\nimport { ErrorMessage } from '../../model/utility.model';\nimport { PsMaxLengths } from '../../common/AppConstants';\nimport { MessageDetail } from '../../model/utility.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/model.service\";\nimport * as i2 from \"../../service/appsession.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../sharedcomponents/appmessages/errormessage.component\";\nimport * as i5 from \"primeng/inputtext\";\nimport * as i6 from \"primeng/togglebutton\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"../../sharedcomponents/progressbar/progressbar.component\";\nimport * as i9 from \"@ngx-translate/core\";\n\nfunction DeactivateaccountComponent_app_progressbar_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-progressbar\", 17);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"isSpinner\", true);\n  }\n}\n\nexport let DeactivateaccountComponent = /*#__PURE__*/(() => {\n  class DeactivateaccountComponent {\n    constructor(userSource, appsession) {\n      this.userSource = userSource;\n      this.appsession = appsession;\n      this.infoMsg = new ErrorMessage();\n      this.siteConstant = new PsMaxLengths();\n      this.isDeactivateConfirm = false;\n      this.user = new User();\n      this.isSubmitted = false;\n    }\n\n    onSubmitDeactivate(form) {\n      if (this.appsession.CurrentUser.userVM.isDemoAccount) {\n        let message = new MessageDetail();\n        message.isInfo = true;\n        message.msg = this.appsession.getTranslated(\"DemoFunctionalityLimited\");\n        this.appsession.setGlobalHeaderMessage(message);\n        return;\n      }\n\n      this.infoMsg.clear();\n\n      if (form.valid) {\n        if (!this.isDeactivateConfirm) {\n          this.infoMsg.add(this.appsession.getTranslated(\"ConfirmDeactivationRequired\"));\n          return;\n        }\n\n        this.isSubmitted = true;\n        this.user.id = this.appsession.CurrentUser.userVM.id;\n        this.userSource.deactivateAccount(this.user).subscribe(data => {\n          this.isSubmitted = false;\n          form.reset();\n          this.appsession.logOut();\n          let message = new MessageDetail();\n          message.isInfo = true;\n          message.msg = this.appsession.getTranslated(\"AccountDeactivated\");\n          this.appsession.setGlobalHeaderMessage(message);\n          return;\n        }, error => {\n          this.isSubmitted = false;\n          let messages = this.appsession.getHttpErrorMessages(error);\n          this.infoMsg.addRange(messages);\n          return;\n        });\n      }\n    }\n\n    ngOnInit() {}\n\n  }\n\n  DeactivateaccountComponent.ɵfac = function DeactivateaccountComponent_Factory(t) {\n    return new (t || DeactivateaccountComponent)(i0.ɵɵdirectiveInject(i1.UsersService), i0.ɵɵdirectiveInject(i2.AppsessionService));\n  };\n\n  DeactivateaccountComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DeactivateaccountComponent,\n    selectors: [[\"app-deactivateaccount\"]],\n    decls: 40,\n    vars: 29,\n    consts: [[1, \"ui-block\"], [1, \"ui-block-title\"], [1, \"title\"], [1, \"ui-block-content\"], [\"ngNativeValidate\", \"\", 3, \"ngSubmit\"], [\"deactiveForm\", \"ngForm\"], [1, \"row\"], [1, \"col-lg-12\", \"col-md-12\", \"col-sm-12\", \"col-xs-12\"], [1, \"form-group\"], [3, \"appMsg\"], [1, \"col-xl-12\", \"col-lg-12\", \"col-md-12\", \"col-sm-12\", \"col-xs-12\"], [1, \"control-label\"], [\"type\", \"password\", \"pInputText\", \"\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\"], [\"name\", \"isDeactivate\", \"id\", \"isDeactivate\", 3, \"onLabel\", \"offLabel\", \"ngModel\", \"ngModelChange\"], [1, \"col-lg-6\", \"col-md-6\", \"col-sm-12\", \"col-xs-12\"], [\"type\", \"submit\", 1, \"btn\", \"btn-blue\", \"btn-lg\", \"full-width\"], [3, \"isSpinner\", 4, \"ngIf\"], [3, \"isSpinner\"]],\n    template: function DeactivateaccountComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h6\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"form\", 4, 5);\n        i0.ɵɵlistener(\"ngSubmit\", function DeactivateaccountComponent_Template_form_ngSubmit_6_listener() {\n          i0.ɵɵrestoreView(_r2);\n\n          const _r0 = i0.ɵɵreference(7);\n\n          return ctx.onSubmitDeactivate(_r0);\n        });\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7)(10, \"div\", 8);\n        i0.ɵɵelement(11, \"app-errormessage\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 10)(13, \"div\", 8)(14, \"p\");\n        i0.ɵɵtext(15);\n        i0.ɵɵpipe(16, \"translate\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(17, \"div\", 10)(18, \"div\", 8)(19, \"label\", 11);\n        i0.ɵɵtext(20);\n        i0.ɵɵpipe(21, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function DeactivateaccountComponent_Template_input_ngModelChange_22_listener($event) {\n          return ctx.user.password = $event;\n        });\n        i0.ɵɵpipe(23, \"translate\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(24, \"div\", 10)(25, \"div\", 8)(26, \"label\", 11);\n        i0.ɵɵtext(27);\n        i0.ɵɵpipe(28, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"p-toggleButton\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function DeactivateaccountComponent_Template_p_toggleButton_ngModelChange_29_listener($event) {\n          return ctx.isDeactivateConfirm = $event;\n        });\n        i0.ɵɵpipe(30, \"translate\");\n        i0.ɵɵpipe(31, \"translate\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(32, \"div\", 7)(33, \"div\", 6);\n        i0.ɵɵelement(34, \"div\", 14);\n        i0.ɵɵelementStart(35, \"div\", 14)(36, \"button\", 15);\n        i0.ɵɵtext(37);\n        i0.ɵɵpipe(38, \"translate\");\n        i0.ɵɵtemplate(39, DeactivateaccountComponent_app_progressbar_39_Template, 1, 1, \"app-progressbar\", 16);\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 13, \"Deactivateyouraccount\"));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"appMsg\", ctx.infoMsg);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(16, 15, \"DeactivateMessage\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(21, 17, \"CurrentPassword\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(23, 19, \"EnterPassword\"));\n        i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n        i0.ɵɵattribute(\"maxlength\", ctx.siteConstant.PasswordMaxLength);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(28, 21, \"DeactivateConfirm\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"onLabel\", i0.ɵɵpipeBind1(30, 23, \"Yes\"));\n        i0.ɵɵpropertyInterpolate(\"offLabel\", i0.ɵɵpipeBind1(31, 25, \"No\"));\n        i0.ɵɵproperty(\"ngModel\", ctx.isDeactivateConfirm);\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(38, 27, \"Deactivate\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isSubmitted);\n      }\n    },\n    directives: [i3.NgControlStatusGroup, i3.NgForm, i4.ErrormessageComponent, i3.DefaultValueAccessor, i5.InputText, i3.RequiredValidator, i3.NgControlStatus, i3.NgModel, i3.MaxLengthValidator, i6.ToggleButton, i7.NgIf, i8.ProgressbarComponent],\n    pipes: [i9.TranslatePipe],\n    encapsulation: 2\n  });\n  return DeactivateaccountComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}