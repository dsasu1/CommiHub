{"ast":null,"code":"import { AppsessionService } from '../../service/appsession.service';\nimport { ServiceRequestService } from '../service/servicerequest.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/appsession.service\";\nimport * as i2 from \"../service/servicerequest.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@ngx-translate/core\";\nexport let ServicerequestfilterComponent = /*#__PURE__*/(() => {\n  class ServicerequestfilterComponent {\n    constructor(appsession, serviceRequestSource) {\n      this.appsession = appsession;\n      this.serviceRequestSource = serviceRequestSource;\n      this.isFilterMode = false;\n    }\n\n    ngOnInit() {\n      this.subscription = this.serviceRequestSource.srListChange.subscribe(value => {\n        if (!this.isFilterMode) {\n          this.availableData = value;\n        }\n      });\n    }\n\n    filterResult() {\n      if (this.filterValue != null || this.filterValue.trim() != '') {\n        this.isFilterMode = true;\n        let result = this.availableData.filter(x => x.tenantUnitAddress.toLowerCase().match(this.filterValue.toLowerCase()));\n        this.serviceRequestSource.srListChange.next(result);\n      }\n    }\n\n    clearFilter() {\n      this.filterValue = null;\n\n      if (this.isFilterMode) {\n        this.isFilterMode = false;\n        this.serviceRequestSource.srListChange.next(this.availableData);\n      }\n    }\n\n    ngOnDestroy() {\n      this.subscription.unsubscribe();\n    }\n\n  }\n\n  ServicerequestfilterComponent.ɵfac = function ServicerequestfilterComponent_Factory(t) {\n    return new (t || ServicerequestfilterComponent)(i0.ɵɵdirectiveInject(i1.AppsessionService), i0.ɵɵdirectiveInject(i2.ServiceRequestService));\n  };\n\n  ServicerequestfilterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ServicerequestfilterComponent,\n    selectors: [[\"app-servicerequestfilter\"]],\n    decls: 16,\n    vars: 15,\n    consts: [[1, \"ui-block\"], [1, \"ui-block-title\"], [1, \"title\"], [1, \"col-12\"], [1, \"form-group\"], [\"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"placeholder\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"disabled\", \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-blue\", 3, \"disabled\", \"click\"]],\n    template: function ServicerequestfilterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h6\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4)(7, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function ServicerequestfilterComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.filterValue = $event;\n        });\n        i0.ɵɵpipe(8, \"translate\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 4)(10, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function ServicerequestfilterComponent_Template_button_click_10_listener() {\n          return ctx.clearFilter();\n        });\n        i0.ɵɵtext(11);\n        i0.ɵɵpipe(12, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function ServicerequestfilterComponent_Template_button_click_13_listener() {\n          return ctx.filterResult();\n        });\n        i0.ɵɵtext(14);\n        i0.ɵɵpipe(15, \"translate\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 7, \"Filter\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(8, 9, \"UnitBuilding\"));\n        i0.ɵɵproperty(\"ngModel\", ctx.filterValue);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.isFilterMode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(12, 11, \"Reset\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.filterValue == null || ctx.filterValue == \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(15, 13, \"Filter\"));\n      }\n    },\n    directives: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    pipes: [i4.TranslatePipe],\n    encapsulation: 2\n  });\n  return ServicerequestfilterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}