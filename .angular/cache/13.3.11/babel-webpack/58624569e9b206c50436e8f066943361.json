{"ast":null,"code":"import { of as observableOf } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AppsessionService } from '../service/appsession.service';\nimport { UsersService } from '../service/model.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/appsession.service\";\nimport * as i2 from \"../service/model.service\";\nexport let UserAuthenticationGuard = /*#__PURE__*/(() => {\n  class UserAuthenticationGuard {\n    constructor(appsession, userService) {\n      this.appsession = appsession;\n      this.userService = userService;\n    }\n\n    canActivate(route, state) {\n      let currenUser = this.appsession.getCurrentUser();\n\n      if (currenUser != null && currenUser.userVM != null && currenUser.userTypeEnum != null) {\n        if (!this.appsession.IsUserLoggedIn) {\n          if (state.url.indexOf(\"/property/\") != -1 && currenUser == null) {\n            return observableOf(true);\n          }\n\n          return this.userService.verifyUserSession(currenUser.userVM).pipe(map(e => {\n            if (e == true) {\n              this.appsession.setIsLogIn(true, currenUser);\n              return true;\n            } else {\n              this.appsession.logOut(true);\n              return false;\n            }\n          }), catchError(() => {\n            this.appsession.logOut(true);\n            this.appsession.redirectToRoute('', {\n              queryParams: {\n                returnUrl: state.url\n              }\n            });\n            return observableOf(false);\n          }));\n        } else {\n          return observableOf(true);\n        }\n      } else {\n        if (state.url.indexOf(\"/property/\") != -1 || [\"/aboutus\", \"/useragreement\", \"/privacypolicy\", \"/help\"].indexOf(state.url) != -1) {\n          return observableOf(true);\n        }\n      }\n\n      this.appsession.logOut(true);\n      this.appsession.redirectToRoute('', {\n        queryParams: {\n          returnUrl: state.url\n        }\n      });\n      return observableOf(false);\n    }\n\n    canActivateChild(childRoute, state) {\n      return this.canActivate(childRoute, state);\n    }\n\n  }\n\n  UserAuthenticationGuard.ɵfac = function UserAuthenticationGuard_Factory(t) {\n    return new (t || UserAuthenticationGuard)(i0.ɵɵinject(i1.AppsessionService), i0.ɵɵinject(i2.UsersService));\n  };\n\n  UserAuthenticationGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserAuthenticationGuard,\n    factory: UserAuthenticationGuard.ɵfac\n  });\n  return UserAuthenticationGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}