{"ast":null,"code":"import { FileOptions } from '../sharedcomponents/fileupload/model/fileupload.model';\nimport { AppsessionService } from '../service/appsession.service';\nimport { PropertyService } from '../property/service/property.service';\nimport { PSUploadType } from '../common/AppConstants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/appsession.service\";\nimport * as i2 from \"../property/service/property.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../sharedcomponents/fileupload/upload-form.component\";\nimport * as i5 from \"@ngx-translate/core\";\n\nfunction PropMediaComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"app-upload-form\", 10);\n    i0.ɵɵlistener(\"onFinishedUpload\", function PropMediaComponent_div_13_Template_app_upload_form_onFinishedUpload_1_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.onUploadFinished($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"div\", 11)(3, \"div\", 12)(4, \"label\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 13)(8, \"div\", 14)(9, \"div\", 15);\n    i0.ɵɵelement(10, \"img\", 16);\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"uploadOptions\", ctx_r0.upOtions);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 3, \"CurrentCoverImage\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"src\", ctx_r0.GetImageUrl(), i0.ɵɵsanitizeUrl);\n  }\n}\n\nconst _c0 = function (a2) {\n  return {\n    \"nav-link\": true,\n    \"curPointer\": true,\n    \"active\": a2\n  };\n};\n\nexport let PropMediaComponent = /*#__PURE__*/(() => {\n  class PropMediaComponent {\n    constructor(appSession, propertySource) {\n      this.appSession = appSession;\n      this.propertySource = propertySource;\n      this.currentTab = \"CoverImage\";\n      this.upOtions = new FileOptions();\n    }\n\n    ngOnInit() {\n      if (this.appSession.IsUserLoggedIn) {\n        if (this.appSession.editItem != null) {\n          this.editProperty = this.appSession.editItem;\n          this.upOtions.propertyInformationId = this.editProperty.id;\n          this.upOtions.uploadTarget = this.editProperty;\n          this.upOtions.directoryId = this.editProperty.id;\n        }\n\n        this.setUploadOptions(this.currentTab);\n        this.upOtions.uploadType = this.currentTab;\n        this.upOtions.userId = this.appSession.CurrentUser.userVM.id;\n      }\n    }\n\n    GetImageUrl() {\n      let result = this.appSession.getImageData(this.editProperty.coverThumbnail, 'image', '../../../assets/img/top-header1.jpg');\n      return result;\n    }\n\n    onUploadFinished(event) {\n      if (this.upOtions.uploadType == PSUploadType[PSUploadType.CoverImage]) {\n        this.editProperty = event;\n        this.appSession.editItem = event;\n\n        if (this.appSession.selectedProperty != null && this.editProperty.id == this.appSession.selectedProperty.id) {\n          this.appSession.setSelectedProperty(this.editProperty);\n        }\n\n        if (this.propertySource.propInfoList != null && this.propertySource.propInfoList.length > 1) {\n          let itemIndex = this.propertySource.propInfoList.findIndex(item => item.id == this.editProperty.id);\n\n          if (itemIndex > -1) {\n            this.propertySource.propInfoList[itemIndex] = this.editProperty;\n            this.propertySource.propInfoListChange.next(this.propertySource.propInfoList);\n          }\n        } else if (this.appSession.properties != null && this.appSession.properties.length > 0) {\n          let itemIndex = this.appSession.properties.findIndex(item => item.id == this.editProperty.id);\n\n          if (itemIndex > -1) {\n            this.appSession.properties[itemIndex] = this.editProperty;\n            this.propertySource.propInfoListChange.next(this.appSession.properties);\n          }\n        }\n      }\n    }\n\n    changeTab(tabName) {\n      this.currentTab = tabName;\n      this.setUploadOptions(this.currentTab);\n    }\n\n    setUploadOptions(uploadType) {\n      this.upOtions.name = uploadType;\n\n      if (this.currentTab == PSUploadType[PSUploadType.CoverImage]) {\n        this.upOtions.hasThumbnail = false;\n        this.upOtions.thumbnailWidth = 440;\n        this.upOtions.thumbnaiHeight = 160;\n      }\n    }\n\n  }\n\n  PropMediaComponent.ɵfac = function PropMediaComponent_Factory(t) {\n    return new (t || PropMediaComponent)(i0.ɵɵdirectiveInject(i1.AppsessionService), i0.ɵɵdirectiveInject(i2.PropertyService));\n  };\n\n  PropMediaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PropMediaComponent,\n    selectors: [[\"app-prop-media\"]],\n    decls: 14,\n    vars: 13,\n    consts: [[1, \"ui-block\"], [1, \"ui-block-title\"], [1, \"title\"], [1, \"ui-block-content\"], [\"id\", \"myTab\", \"role\", \"tablist\", 1, \"nav\", \"nav-tabs\"], [1, \"nav-item\"], [\"id\", \"CoverImage-tab\", 3, \"ngClass\", \"click\"], [\"id\", \"myTabContent\", 1, \"\"], [\"class\", \"\", \"id\", \"CoverImage\", 4, \"ngIf\"], [\"id\", \"CoverImage\", 1, \"\"], [3, \"uploadOptions\", \"onFinishedUpload\"], [1, \"row\"], [1, \"col-lg-12\"], [1, \"col-lg-6\"], [1, \"friend-item\"], [1, \"friend-header-thumb\"], [\"alt\", \"friend\", 3, \"src\"]],\n    template: function PropMediaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h6\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵpipe(5, \"translate\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"ul\", 4)(8, \"li\", 5)(9, \"a\", 6);\n        i0.ɵɵlistener(\"click\", function PropMediaComponent_Template_a_click_9_listener() {\n          return ctx.changeTab(\"CoverImage\");\n        });\n        i0.ɵɵtext(10);\n        i0.ɵɵpipe(11, \"translate\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"div\", 7);\n        i0.ɵɵtemplate(13, PropMediaComponent_div_13_Template, 11, 5, \"div\", 8);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(4, 5, \"Media\"), \" / \", i0.ɵɵpipeBind1(5, 7, \"Documents\"), \"\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, ctx.currentTab == \"CoverImage\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 9, \"CoverImage\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.currentTab == \"CoverImage\");\n      }\n    },\n    directives: [i3.NgClass, i3.NgIf, i4.UploadFormComponent],\n    pipes: [i5.TranslatePipe],\n    encapsulation: 2\n  });\n  return PropMediaComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}